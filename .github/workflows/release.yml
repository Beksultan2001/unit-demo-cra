name: release-workflow-actions
run-name: ${{ github.actor }} is running release
on:
   push:
     tags:
       - 'v\d+'

jobs:
  create_or_update_issue:
    name: Create or Update Release issue
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate change log
        id: get_tags
        run: |
          CURRENT_TAG=${{ github.ref_name }} 
          TIMESTAMP=$(git show -s --format=%ai ${CURRENT_TAG})
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${CURRENT_TAG}^)
          echo "current=${CURRENT_TAG}" >> "$GITHUB_ENV"
          echo "previous=${PREVIOUS_TAG}" >> "$GITHUB_ENV"
          echo "timestamp=${TIMESTAMP}" >> "$GITHUB_ENV"

      - name: Generate changelog
        id: generate_log
        run: |
          CHANGELOG=$(git log --pretty=format:"- %s" "${{ env.previous }}...${{ env.current }}")
          echo "log=${CHANGELOG}" >> "$GITHUB_ENV"

      - name: Get existing issue
        id: get_issue
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            query($repo: String!, $owner: String!, $title: String!) {
              repository(name: $repo, owner: $owner) {
                issues(last: 1, filterBy: { states: OPEN, labels: "RELEASE", query: $title }) {
                  nodes {
                    id
                  }
                }
              }
            }
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          title: "Release ${{ github.ref_name }}"

      - name: Create or update issue
        uses: octokit/request-action@v2.x
        id: create_update_issue
        with:
          route: ${{ (steps.get_issue.outputs.data.repository.issues.nodes[0].id != '') && 'POST /repos/:owner/:repo/issues/:issue_number' || 'POST /repos/:owner/:repo/issues' }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          issue_number: ${{ steps.get_issue.outputs.data.repository.issues.nodes[0].id }}
          title: "Release ${{ github.ref_name }}"
          body: |
            ### Это релиз приложения версии ${{ github.ref_name }}

            Авто релиза: ${{ github.actor }}

            Время: ${{ env.timestamp }}

            Changelog:

            ${{ env.log }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_release_branch:
    name: Create release branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Create release branch
        run: |
          BRANCH_NAME=release-${{ github.ref_name }}
          git checkout -b $BRANCH_NAME
          git push -u origin $BRANCH_NAME
