name: Release process
on:
  push:
    tags:
      - "v*"
jobs:
  # check-tests:
  #   name:  Check Tests
  #   uses: ./.github/workflows/tests.yml
  issue:
    name: create or update issue
    # needs: check-tests
    uses: ./.github/workflows/issue.yml

  pr:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: issue.issue  # 'issue' refers to the workflow name, and 'issue' refers to the job name in the 'issue.yml' workflow
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Git checkout
        run: |
          git checkout -b release-${{ github.ref_name }}
      - name: Push the branch
        run: git push origin release-${{ github.ref_name }}

      - name: Create or Update Pull Request
        id: create_or_update_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const [owner, repo] = '${{ github.repository }}'.split('/');
            const base = 'master';
            const head = `release-${{ github.ref_name }}`;
            const issue_number = ${{ needs.issue.outputs.issue_number }};
            const prBody = `This is a pull request for release. Closes #` + issue_number;
            const title = `Release ${head} by ${{ github.actor }}`;
            const pr = { owner, repo, base, head, body: prBody, title };
  
            const pulls = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${head}` });
            const existingPr = pulls.data.find(p => p.title === title);
  
            if (existingPr) {
              const update = { owner, repo, pull_number: existingPr.number, body: prBody };
              await github.rest.pulls.update(update);
            } else {
              await github.rest.pulls.create({ ...pr });
            }