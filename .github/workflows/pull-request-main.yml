name: Release process - Pull Request

on: [workflow_call]

jobs:
  pull-request:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Initialize git config, checkout, and push
        run: |
          git config user.name "GitHub Actions" && git config user.email noreply@github.com && git checkout -b release-${{ github.ref_name }} && git push origin release-${{ github.ref_name }}

      - name: Create or Update Pull Request
        id: create_or_update_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const checkIfExists = (await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:release-${process.env.GITHUB_REF}` })).data.find(p => p.title === `Release release-${process.env.GITHUB_REF} by ${process.env.GITHUB_ACTOR}`);
            if (checkIfExists) {
              await github.rest.pulls.update({ owner, repo, pull_number: existingPr.number, body: `This is a pull request for release. Closes #${process.env.GITHUB_REF}` });
            } else {
              await github.rest.pulls.create({ owner, repo, base: 'master', head: `release-${process.env.GITHUB_REF}`, body: `This is a pull request for release. Closes #${process.env.GITHUB_REF}`, title: `Release release-${process.env.GITHUB_REF} by ${process.env.GITHUB_ACTOR}` });
            }
