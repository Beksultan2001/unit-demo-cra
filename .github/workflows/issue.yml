name: Issue
run-name: issue
on: [workflow_call]

jobs:
  issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install auto-changelog
        run: npm i -g auto-changelog

      - name: Generate changelog
        run: auto-changelog --commit-limit false --template keepachangelog

      - name: Create or update Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |

            const fs = require('fs');
            const MAX_BODY_LENGTH = 4000;

            // Truncate the description if it exceeds the maximum length
            const changelog = fs.readFileSync('CHANGELOG.md', 'utf8');
            const truncatedDescription = changelog.length > MAX_BODY_LENGTH
              ? changelog.slice(0, MAX_BODY_LENGTH)
              : changelog;

            const ref_name = '${{ github.ref_name }}';
            const value = `Release--${ref_name} by ${{ github.actor }}`;
            const temp = {labels: ['RELEASE'], owner:'${{ github.repository }}'.split('/')[0] , repo: '${{ github.repository }}'.split('/')[1]};
            const list = await github.rest.issues.listForRepo({ ...temp, state: 'all' });
            const isThere = list.data.find(i => i.title === value);

            isThere ?  await github.rest.issues.update({ ...temp, issue_number: isThere.number, body: truncatedDescription, state: 'open' }) : await github.rest.issues.create({ ...temp, title: value, body: truncatedDescription });
