name: Release process - Issue
run-name: issue
on: [workflow_call]

jobs:
  issue:
    runs-on: ubuntu-latest
    # needs: check-tests
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install auto-changelog
        run: npm i -g auto-changelog
      - name: Generate changelog
        run: auto-changelog --commit-limit false --template keepachangelog
      - name: üåà Define tags
        id: get_tags
        run: |
          CURRENT_TAG=${{ github.ref_name }} 
          TIMESTAMP=$(git show -s --format=%ai ${CURRENT_TAG})
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${CURRENT_TAG}^)
          echo "current=${CURRENT_TAG}" >> "$GITHUB_OUTPUT"
          echo "previous=${PREVIOUS_TAG}" >> "$GITHUB_OUTPUT"
          echo "timestamp=${TIMESTAMP}" >> "$GITHUB_OUTPUT"

      - name: üìÉ Generate changelog
        id: generate_log
        run: |
          CHANGELOG=$(git log --pretty=format:"- %s" "${{ steps.get_tags.outputs.previous }}...${{ steps.get_tags.outputs.current }}")
          echo "Display changelog:"
          echo $CHANGELOG
          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "${CHANGELOG}" >> "$GITHUB_OUTPUT"
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create 
        uses: actions/github-script@v6
         with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const fs = require('fs');
              const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
              const version = process.env.GITHUB_REF;
              const title = `Release ${version}`;

              const issuesList = await github.rest.issues.listForRepo({ owner, repo, labels: ['RELEASE'], state: 'all' });
              const existingIssue = issuesList.data.find(issue => issue.title === title);

              const textTemp` ### –≠—Ç–æ —Ä–µ–ª–∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ ${{ github.ref_name }}

              –ê–≤—Ç–æ—Ä —Ä–µ–ª–∏–∑–∞: ${{ github.actor }}

              –í—Ä–µ–º—è: ${{ steps.get_tags.outputs.timestamp }}
              
              Changelog:

              ${{ steps.generate_log.outputs.log }}

              –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —ç–∫—à–µ–Ω–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ç–∫—É —Ä–µ–ª–∏–∑–∞

              [Deploy application](https://github.com/Beksultan2001/unit-demo-cra/actions/workflows/build-deploy-github-actions.yml)
              `;

              if (existingIssue) {
                await github.rest.issues.update({
                  owner,
                  repo,
                  issue_number: existingIssue.number,
                  body: textTemp,
                  state: 'open',
                  labels: ['RELEASE'],
                });
              } else {
                await github.rest.issues.create({
                  owner,
                  repo,
                  title,
                  body: textTemp,
                  labels: ['RELEASE'],
                });
              }

            
